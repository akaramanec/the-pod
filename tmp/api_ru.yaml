openapi: 3.0.0
servers:
  - url: https://api.interkassa.com/v1
    description: Default server

info:
  description: |

    # SCI
    # 1. Введение  

    ## 1.1. Что такое SCI?  
    SCI (Shop Cart Interface) — это программный интерфейс, который позволяет любому мерчанту автоматически принимать платежи в режиме онлайн.

    ![страницы приема платежей](images/sci_demo.png)

    Демонстрация - https://sci.interkassa.com/?test

    ## 1.2. Описание данного документа  
    В данном документе предоставлена исчерпывающая информация по протоколу взаимодействия с платежным шлюзом SCI. Так же в нем Вы найдете типовые решения, примеры реализации и всю необходимую информацию для интеграции данного шлюза с Вашим сайтом.

    ## 1.3. Целевая аудитория  
    Данный документ предназначен для технических специалистов, веб-мастеров и разработчиков, работающих в компании, которая хочет принимать и обрабатывать данные платежей в Интернете. Для использования данного протокола необходимо обладать базовыми знаниями в веб-разработке. Протокол предоставляет разные по сложности типовые решения подключения.

    ## 1.4. Терминология  
    **SCI (Shop Cart Interface)** - это программный интерфейс, который позволяет любому мерчанту автоматически принимать платежи в режиме онлайн.    
    **Мерчант (Merchant)** - владелец счета, который принимает платежи на его счет через SCI, как правило, продукты или услуги, предлагаемые в своем интернет-магазине.  
    **Клиент (Client)** - покупатель, который приобретает продукты или услуги от мерчанта. Покупатель перенаправляется на SCI для совершения оплаты.  
    **Касса (Checkout)** - Точка приема платежей на сайте мерчанта.

    ## 1.5. Сокращения
    * **IK** — Interkassa  
    * **SCI** — Shop Cart Interface  
    * **CO** — Checkout - Точка приема платежей на сайте мерчанта 
    * **XSS** — Сross Site Sсriрting  
    * **ЭЦП** - Электронная цифровая подпись  
    * **URL** — Uniform Resource Locator  
    * **WWW** — World Wide Web  

    # 2. Описание  
    ## 2.1. Основные сведения  
    SCI — программный интерфейс для приема платежей через интернет. Основная суть шлюза приема платежей сводится к единой точке входа клиента на оплату и возвращение его на сайт после оплаты. Она позволяет, независимо от способа оплаты, единообразно взаимодействовать с клиентом и обрабатывать платежи. Как и любой программный интерфейс, он имеет свой протокол взаимодействия, свою функциональность, ряд требований и ограничений. В зависимости от степени интеграции, протокол позволяет очень гибко реализовывать различные схемы взаимодействия между Вами и Вашим клиентом.

    ## 2.2. Подключение  
    Все что Вам необходимо для приема платежей онлайн — это:  

      1. Зарегистрироваться в системе Интеркасса.  
      2. Создать новый (или использовать существующий) бизнес-аккаунт.  
      3. Создать новую кассу и настроить ее (параметры настройки приведены ниже).  
      4. Перенаправить клиента на оплату с помощью HTML-формы запроса платежа. 

    ## 2.3. Взаимодействие
    С точки зрения интеграции, SCI представляет собой веб-страницу (`https://sci.interkassa.com`), которая принимает HTTP-запрос с GET или POST параметрами, и в зависимости от типа действия (**ik_act**) и интерфейса (**ik_int: web / json**) отвечает соответствующим результатом. Так как сервис предоставляет возможность гибкой интеграции, ниже мы предлагаем типовые решения для различных задач и сложностей исполнения. В зависимости от типа вашего бизнеса, SCI можно использовать различными способами: 
    - если Вы не имеете собственный сайт или продаете на Вашем сайте товары или услуги в небольшом объеме, а заказы обрабатываете в ручном режиме, то Вам достаточно перенаправить клиента на оплату с помощью HTML-формы, которую можно разместить как в email письме, так и на Вашем сайте. А после проведения платежа он будет доступен в Вашем личном кабинете. Так же, Вы сможете получить email или sms уведомление при зачислении его.  
    - если Вы предоставляете товары или услуги, имеете собственный биллинг и хотите автоматически обрабатывать принятые платежи, то для этого Вам необходимо реализовать логику обработки уведомления от SCI о проведенном платеже. Оно будет передаваться автоматически при зачислении платежа на Ваш сайт, независимо от способа оплаты будь то Visa, Mastercard, банковский перевод или терминалы самообслуживания и т.п. 
    - если Вы хотите реализовать выбор способа оплаты и перенаправление клиента прямо на платежный шлюз в обход веб-интерфейса SCI, то это так же реализуемо за счет поддержки протоколом интерфейса JSON, который позволит Вашему сайту в скрытом для клиента режиме получать все необходимые данные для процессинга.  

    ## 2.4. Схема работы

    ![схема процесса оплаты](images/sci_scheme.png)

    **Checkout Page** — Страница, на которой отображается HTML-форма запроса платежа (SCI Form).  
    **Paysystems List** Страница с доступными для данной кассы платежными системами, через которые клиент может совершить оплату. Пример:  
    
    ![список платежных систем](images/sci_ru.jpg)

    **Payway List** — Страница выбора способа оплаты. Пример: 

    ![выбор способа оплаты](images/paywaylist.jpg)

    **Create Invoice** — Скрипт создания счета на оплату и перенаправления клиента на платежный шлюз (Pay Form).  
    **Payment Gateway** — Платежный шлюз, через который клиент совершает оплату.  
    **Payment Processing** — Скрипт проведения платежа на платежном шлюзе. При проведении платежа, уведомляет сервер SCI (Interaction Page) о результате проведения. В свою очередь, SCI уведомляет Interaction Page на сервере мерчанта с информацией по счету и проведении платежа (Interaction Form).  
    **Payment Result Page** — Страница результата проведения платежа, с которой клиент перенаправляется на SCI.  
    **Result Page** —  Страница SCI, на которую попадает клиент после оплаты, ожидает получения SCI результата проведения платежа платежным шлюзом, и в зависимости от этого перенаправляется на страницу Успешного проведения платежа (Success Page), Неуспешного (Fail Page) или Незавершенного (Pending Page) соответственно. Пример:

    ![страница успешного платежа](images/sci_demo_success_ru.png)

    ## 2.5. Пример процесса оплаты
    Рассмотрим типовой процесс оплаты на примере интернет-магазина. Предположим, что в этом интернет-магазине клиенту предоставляется возможность покупки билета в кино. Оплата заказа должна обрабатываться автоматически, а билет предоставляться клиенту сразу после оплаты.

    1. Клиент выбирает понравившийся ему сеанс и места. Формирует заказ. Созданному заказу присваивается идентификационный номер и сумма для оплаты.  
    2. Клиент переходит на страницу оплаты (Checkout Page) на сайте мерчанта, и ему отображается кнопка для перехода на платежный шлюз SCI. Эта кнопка привязана к HTML-форме (SCI Form) и указывает на веб-интерфейс SCI — `https://sci.interkassa.com`. Эта HTML-форма содержит ряд скрытых параметров для SCI (см. Протокол), а так же данные платежа (сумма, идентификатор заказа и др.).  
    3. При нажатии на эту кнопку, клиент перенаправляется на веб-интерфейс SCI с доступными платежными системами (Paysystems List) через которые можно совершить оплату.  
    4. На странице выбора платежной системы (Paysystems List) клиенту отображаются данные платежа, сумма, описание.  
    5. При выборе одной из платежных систем клиенту отображаются доступные способы оплаты через нее (Payway List). А так же, клиенту предлагается ознакомиться с условиями оплаты и указать свои контактные данные.  
    6. При нажатии на кнопку "Оплатить" в системе Интеркасса создается новый счет (Create Invoice) закрепленный за кассой и клиент перенаправляется (Pay Form) на платежный шлюз (Payment Gateway).  
    7. На платежном шлюзе (Payment Gateway) клиент производит оплату.  
    8. При проведении платежа платежным шлюзом (Payment Processing) SCI получает уведомление о результате проведения платежа и ретранслирует его в унифицированном формате (Interaction Form) на сайт мерчанта (Interaction Page).  
    9. После оплаты платежный шлюз перенаправляет клиента на страницу возврата (Result Page). На этой странице, SCI, основываясь на доступных данных, определяет состояние платежа, и в зависимости от него, перенаправляет клиента на ту или иную страницу результата на сайте продавца (Success Page, Fail Page, Pending Page) соответственно.  

    # 3. Протокол  
    ## 3.1. Настройки кассы  

    | Свойство | Название | Примечание |
    | -------- | ----- | ---- |
    | **MAIN** ||
    | Name | Имя | Отображается на SCI. |
    | Url | URL | Отображается на SCI. |
    | Desc | Описание | Отображается на SCI. |
    | Fee Rate | Комиссия Интеркассы | Используется SCI при расчете суммы платежа. См. тарифы. |
    | Fee Shift | Переложение комиссии на покупателя | Используется SCI при расчете суммы платежа. Указывает в процентах, какая часть комиссии Интеркассы перекладывается на продавца. Например: если установлено в 30% комиссии на продавце, то 70% на покупателе. Из расчета что комиссия Интеркассы, например, 3% и суммы платежа 100 у.е., сумма платежа в платежной системе составит 102,1 у.е., а зачисленные средства кассы - 99,1 у.е.. |
    | Payment No Unique | Проверка уникальности номера платежа | Используется SCI. Данная опция позволяет производить проверку перед созданием нового платежа на уникальность по его номеру. И в случае, если платеж с таким же номером найден в биллинге кассы, клиенту выдается соответствующая ошибка. При проверке используется параметр SCI "ik_pm_no". По умолчанию выключено. |
    | Payment Lifetime | Время жизни платежа | Указывает в секундах срок истечения платежа после его создания. Не используется, если установлен срок истечения платежа параметром "ik_exp" на SCI. По умолчанию "2592000"(30 дней). |
    | Payment Lifetime Override | Возможность переопределить время жизни платежа | Указывает на возможность переопределения свойства "Время жизни платежа" параметром "ik_ltm" на SCI. По умолчанию выключено. |
    | Show Logo | Отображение логотипа | Указывает на возможность отображения логотипа кассы на веб-интерфейсе SCI. По умолчанию выключено. |
    | **SECURITY** |  |  |
    | Sign Algorithm | Алгоритм формирования цифровой подписи | Используется SCI при формировании цифровой подписи. Доступные алгоритмы: md5, sha256. По умолчанию "md5". |
    | Sign Key | Ключ цифровой подписи | Используется SCI при формировании цифровой подписи. |
    | Sign Test Key | Ключ цифровой подписи для тестирования | Используется SCI при формировании цифровой подписи, если платеж был совершен через тестовую платежную систему. См. [тестирование](#section/5.-Testirovanie). |
    | Sign Co Required | Требуется ли цифровая подпись от кассы | Используется SCI при проверке входящих параметров от кассы, если опция активирована. По умолчанию выключено. См. [формировании цифровой подписи](#section/3.-Protokol/3.5.-Formirovanie-cifrovoj-podpisi). |
    | **INTERACTION** |  |  |
    | Success Url | URL страницы проведенного платежа | Используется при перенаправления клиента с SCI обратно на сайт кассы, если платеж является проведенным. |
    | Success Url Override | Возможность переопределить URL страницы проведенного платежа | Указывает на возможность переопределения свойства "URL страницы проведенного платежа" параметром "ik_suc_u" на SCI. По умолчанию включено. |
    | Success Method | Метод запроса страницы проведенного платежа | Используется при перенаправления клиента с SCI обратно на сайт кассы, если платеж является проведенным. По умолчанию POST. |
    | Success Method Override | Возможность переопределить метод запроса страницы проведенного платежа | Указывает на возможность переопределения свойства "Метод запроса страницы проведенного платежа" параметром "ik_suc_m" на SCI. По умолчанию включено. |
    | Fail Url | URL страницы непроведенного платежа | Используется при перенаправления клиента с SCI обратно на сайт кассы, если платеж является непроведенным. |
    | Fail Url Override | Возможность переопределить URL страницы непроведенного платежа | Указывает на возможность переопределения свойства "Метод запроса страницы непроведенного платежа" параметром "ik_fal_u" на SCI. По умолчанию включено. |
    | Fail Method | Метод запроса страницы непроведенного платежа | Используется при перенаправления клиента с SCI обратно на сайт кассы, если платеж является непроведенным. По умолчанию POST. |
    | Fail Method Override | Возможность переопределить метод запроса страницы непроведенного платежа | Указывает на возможность переопределения свойства "Метод запроса страницы непроведенного платежа" параметром "ik_fal_m" на SCI. По умолчанию включено. |
    | Pending Url | URL страницы ожидания проведения платежа | Используется при перенаправления клиента с SCI обратно на сайт кассы, если платеж ожидает проведение. |
    | Pending Url Override | Возможность переопределить URL страницы ожидания проведения платежа | Указывает на возможность переопределения свойства "URL страницы ожидания проведения платежа" параметром "ik_pnd_u" на SCI. По умолчанию включено. |
    | Pending Method | Метод запроса страницы ожидания проведения платежа | Используется при перенаправления клиента с SCI обратно на сайт кассы, если платеж ожидает проведение. По умолчанию POST. |
    | Pending Method Override | Возможность переопределить метод запроса страницы ожидания проведения платежа | Указывает на возможность переопределения свойства "Метод запроса страницы ожидания проведения платежа" параметром "ik_pnd_m" на SCI. По умолчанию включено. |
    | Interaction Url | URL страницы взаимодействия | Используется SCI при отправке уведомления на сайт кассы о статусе платежа. См. 3.4. Оповещение о платеже. |
    | Interaction Url Override | Возможность переопределить URL страницы взаимодействия | Указывает на возможность переопределения свойства "URL страницы взаимодействия" параметром "ik_ia_u" на SCI. По умолчанию выключено. |
    | Interaction Method | Метод запроса страницы взаимодействия | Используется SCI при отправке уведомления на сайт кассы о статусе платежа. По умолчанию POST. |
    | Interaction Method Override | Возможность переопределить метод запроса страницы взаимодействия | Указывает на возможность переопределения свойства "Метод запроса страницы взаимодействия" параметром "ik_ia_m" на SCI. По умолчанию выключено. |
    | Interaction Confirm Http Code | Http-код подтверждения успешного получения уведомления о статусе платежа | Используется SCI при отправке уведомления на сайт кассы о статусе платежа. Если при отправке уведомления, HTTP код ответа от сервера кассы будет не совпадать с указанным значением, то такое уведомление будет считаться не доставленным и будет произведена повторная отправка. По умолчанию "200" (OK). |
    | Interaction Confirm Text | Текст подтверждения успешного получения уведомления о статусе платежа | Используется SCI при отправке уведомления на сайт кассы о статусе платежа. Если при отправке уведомления, в теле ответа от сервера кассы не будет присутствовать указанный текст, то такое уведомление будет считаться не доставленным и будет произведена повторная отправка. По умолчанию выключено. |

    ## 3.2. Форма запроса платежа  
    Данная HTML-форма (SCI Form) является ключевой в протоколе SCI. С помощью нее, Вы можете в любой точке Вашего веб-приложения перенаправить клиента на оплату. В ней, Вы передаете все необходимые для этого параметры, такие как идентификатор кассы, сумму и валюту платежа, а также ссылки на страницы Вашего сайта, на которые будет отправлен покупатель после успешной или неуспешной оплаты, например:  
    
    ```
    <form name="payment" method="post" action="https://sci.interkassa.com/" accept-charset="UTF-8">
      <input type="hidden" name="ik_co_id" value="51237daa8f2a2d8413000000"/>
      <input type="hidden" name="ik_pm_no" value="ID_4233"/>
      <input type="hidden" name="ik_am" value="1.44"/>
      <input type="hidden" name="ik_cur" value="uah"/>
      <input type="hidden" name="ik_desc" value="Payment Description"/>
      <input type="submit" value="Pay">
    </form>
    ```

    Так же, платежная форма может содержать дополнительные параметры, которые влияют на доступные способы оплаты, срок действия заказа, язык торгового интерфейса и т.п. Полный перечень параметров платежной формы приведен ниже:  

    | **Ключ** | **Имя** | **Формат** | **Пример** | **Описание** |
    | ------- | -------- | ---------- | ----------- | --------------- |
    | **Платеж** |  |  |  |
    | ik_co_id* | Checkout ID   | /^[\w\-]{1,36}$/D | 4f269503a1da92c807000002 | Идентификатор кассы. Обязательный параметр. См. настройки кассы. |
    | ik_pm_no* | Payment No. | /^[\w\-]{1,32}$/D | 14533; ID_4233 | Номер платежа. Сохраняется в биллинге Интеркассы. Позволяет идентифицировать платеж в системе, а так же связать с заказами в вашем биллинге. Проверяется уникальность, если в настройках кассы установлена данная опция. Обязательный параметр. |
    | ik_cur* | Currency | /^.{3}$/ | USD; EUR; UAH | Валюта платежа. Обязательный параметр, если к кассе подключено больше чем одна валюта. См. настройки кассы. |
    | ik_am* | Amount |  /^[\d]{1,8}([\.,][\d]{1,2})?$/ | 1.43; 43 |  Сумма платежа. Обязательный параметр. |
    | ik_desc* | Description | /^.{0,255}$/ | Payment Description; Cool stuff | Описание платежа. Обязательный параметр. |
    | ik_am_t | Amount Type | /invoice\|payway/ | invoice; payway | Тип суммы платежа. Позволяет указать стратегию расчета суммы платежа кассы и платежной системы. В зависимости от нее расчет идет по той или иной сумме. Если указан тип суммы "invoice", то сумма платежа в платежной системе рассчитывается от суммы платежа кассы. Если же тип суммы "payway" - то наоборот. По умолчанию - "invoice". |
    | ik_exp | Expired | /^.{0,30}$/ | 2011-05-01; <br> 2011-10-01 20:50:33 | Срок истечения платежа. Не позволяет клиенту оплатить платеж позже указанного срока. Если же он совершил оплату, то средства зачисляются ему на лицевой счет в системе Интеркасса. Параметр используется если платеж привязан к заказу, который быстро теряет свою актуальность с истечением времени. Например: онлайн бронирование. Опциональный параметр. |
    | ik_ltm | Lifetime | /^[\d]{1,10}$/ | 3600; 86400 | Время жизни платежа. Указывает в секундах срок истечения платежа после его создания. Не используется, если установлен срок истечения платежа (ik_exp). Опциональный параметр. По умолчанию используется свойство кассы "Время жизни платежа" (Payment Lifetime). |
    | ik_cli | Payer contact | /^.{0,64}$/ | example@example.com | Параметр предназначен для передачи контактных данных плательщика, например email или телефон. Данные сохраняются в системе вместе c платежом и могут использоваться в отдельных случаях для передачи на платежную систему. Также при включенных настройках доставки уведомлений на сервер мерчанта - этот параметра будет присутствовать в теле нотификации(см. 3.4. Оповещение о платеже) |
    | ik_pay_token | Pay Token | /[\w\/'\"\:\;\[\]\{\}\+\=\-]{10,}/| UGF5IHRva2VuIHBhcmFtZXRlcnMgZm9yIGV4YW1wbGUK | Cпециальный параметр используется для оплаты платежа без участия плательщика (recurrent payment) или с минимальным участием плательщика (one-click payment). Значение для параметра можно получить после успешного платежа в Уведомлении на сервер мерчанта (см. 3.4. Оповещение о платеже), в поле ik_p_card_token (для карт). Данное значение доступно не во всех платежных системах. Для активации и более подробной информации просьба написать на почту merchant@interkassa.com. |
    | **Оплата** |  |  |  |  |
    | ik_pw_on | Payway On | /^[\w;,\.]{0,512}$/ | webmoney; w1_merchant_usd | Включенные способы оплаты. Позволяет указывать доступные способы оплаты для клиента. Опциональный параметр. |
    | ik_pw_off | Payway Off | /^[\w;,\.]{0,512}$/ | webmoney_merchant | Отключенные способы оплаты. Позволяет указывать недоступные способы оплаты для клиента. Опциональный параметр. |
    | ik_pw_via | Payway Via | /^[\w]{0,62}$/ | visa_liqpay_merchant_usd | Выбранный способ оплаты. Позволяет указать точный способ оплаты для клиента. Параметр работает только с параметром действия (ik_act) установленного в "process" или "payway". см. действие (ik_act). Опциональный параметр. |
    | **Система** |  |  |  |  |
    | ik_sign | Signature | /^.{0,128}$/ | oVAOevI3mWrcvrjB4j/ySg== | Цифровая подпись. См. формирования цифровой подписи. Обязательный параметр, если в настройках кассы установлен параметр "Проверять подпись в форме запроса платежа" (Sign Co Required). |
    | ik_loc | Locale | /^.{5}$/' | ru; en; ua; | Локаль. Позволяет явно указать язык и регион установленные для клиента. Формируется по шаблону: [language[_territory]. По умолчанию определяется автоматически. |
    | ik_enc | Encoding | /^.{0,16}$/ | utf-8; | Используется кодировка UTF-8. |
    | **Взаимодействие** |  |  |  |  |
    | ik_ia_u | Interaction Url | URL | http://www.site.com/interaction.script | URL страницы взаимодействия. Опциональный параметр. |
    | ik_ia_m | Interaction Method | /get \| post/ | POST, GET | Метод запроса страницы взаимодействия. Опциональный параметр. |
    | ik_suc_u | Success Url | URL | http://www.site.com/success.script | URL страницы проведенного платежа. Опциональный параметр. |
    | ik_suc_m | Success Method | /get \| post/ | POST, GET | Метод запроса страницы проведенного платежа. Опциональный параметр. |
    | ik_pnd_u | Pending Url | URL | http://www.site.com/pending.script | URL страницы ожидания проведения платежа. Опциональный параметр. |
    | ik_pnd_m | Pending Method | /get \| post/ | POST, GET | Метод запроса страницы ожидания проведения платежа. Опциональный параметр. |
    | ik_fal_u | Fail Url | URL | http://www.site.com/fail.script | URL страницы непроведенного платежа. Опциональный параметр. |
    | ik_fal_m | Fail Method | /get \| post/ | POST, GET | Метод запроса страницы непроведенного платежа. Опциональный параметр. |
    | **Протокол** |  |  |  |  |
    | ik_act | Action | /process \| payways \| payway/ | process; payways | Действие. Позволяет переопределить начальное состояние процесса оплаты. Опциональный параметр. process — обработать; payways — способы оплаты; payway — платежное направление. |
    | ik_int | Interface | /web \| json/ | web; json | Интерфейс. Позволяет указать формат интерфейса SCI как "web" или "json". По умолчанию "web". |
    | ik_x_[name] | X Prefix |  | ik_x_field1 = somedata; ik_x_baggage1 = code123; | Префикс дополнительных полей. Позволяет передавать дополнительные поля на SCI, после чего эти параметры включаются в данные уведомления о совершенном платеже на страницу взаимодействия. |

    Для создания формы оплаты вы можете воспользоваться нашим генератором платежной формы. Рисунок 2.

    ![генерации платежной формы](images/generate_payment_form_ru.png)  
    **Рисунок 2.** Генератор платежной формы

    ## 3.3. Страницы возврата клиента
   
    После оплаты платежный шлюз может перенаправить клиента на страницу возврата (Result Page). На этой странице, система попробует перенаправить клиента на ту или иную страницу результата на сайте продавца (Success Page, Fail Page, Pending Page) в зависимости от состояния платежа на текущий момент. Так же, в форме возврата клиента (Return Form) на кассу, SCI может передать дополнительные параметры, в зависимости от настроек кассы и параметров платежа. Полный перечень параметров формы возврата приведен ниже:

    | **Ключ** | **Имя** | **Пример** | **Описание** |
    | ------- | -------- | ----------- | --------------- |
    | **Basic** |  |  |  |
    | ik_co_id | Checkout ID | 4f269503a1da92c807000002 | Идентификатор кассы. См. настройки кассы. |
    | ik_inv_id | Invoice ID | 145362343 | Идентификатор платежа в системе Интеркасса |
    | ik_pm_no | Payment No. | 14533; ID_4233 | Номер платежа. Сохраняется в биллинге Интеркассы. Позволяет идентифицировать платеж в системе, а так же связать с заказами в вашем биллинге. Проверяется уникальность, если в настройках кассы установлена данная опция. |
    | ik_inv_st | Invoice State | success; fail | Состояние платежа. Возможные значения: waitAccept —ожидает оплаты, process —обрабатывается, success —успешно проведен, canceled—отменен, fail—не проведен. |

    **Внимание!** Так как, форма возврата клиента (Return Form) передается через незащищенный канал клиента, то, следовательно, не может быть использована для зачисления платежа вашим веб-приложением. Для этого, Вам необходимо использовать форму оповещения о платеже (Interaction Form).

    ## 3.4. Оповещение о платеже
    При проведении платежа, SCI создает запрос с данными по нему на страницу взаимодействия (Interaction URL). В этом запросе содержатся все необходимые данные для завершения процесса оплаты заказа на вашем сайте. Данная форма предназначена, в первую очередь, для тесной интеграции SCI с Вашим сайтом. Она позволяет автоматизировать процесс, который инициализируется по получению данного уведомления о совершенном платеже, для зачисления платежа и обработки заказа в биллинге на Вашем сайте. Полный перечень параметров формы возврата приведен ниже:  

    | **Ключ** | **Имя** | **Пример** | **Описание** |
    | ------- | -------- | ----------- | --------------- |
    | ik_co_id | Checkout ID | 4f269503a1da92c807000002 | Идентификатор кассы. Обязательный параметр. См. настройки кассы. |
    | ik_pm_no | Payment No. | 14533; ID_4233 | Номер платежа. Сохраняется в биллинге Интеркассы. Позволяет идентифицировать платеж в системе, а так же связать с заказами в вашем биллинге. Проверяется уникальность, если в настройках кассы установлена данная опция. Опциональный параметр. |
    | ik_desc | Description | Payment Description; Cool stuff | Описание платежа. Опциональный параметр. |
    | ik_pw_via | Payway Via | visa_liqpay_merchant_usd | Выбранный способ оплаты. Позволяет указать точный способ оплаты для клиента. Параметр работает только с параметром действия (ik_act) установленного в "process" или "payway". см. действие (ik_act). Опциональный параметр. |
    | ik_am | Amount | 1.43; 43 | Сумма платежа. Обязательный параметр. |
    | ik_cur | Currency | USD; EUR; UAH |   Валюта платежа. Обязательный параметр, если к кассе подключено больше чем одна валюта. См. настройки кассы. |
    | ik_act | Action | process | Действие. Значение "process" указывает на то, что SCI запрашивает зачисление платежа на стороне кассы. |
    | ik_x_[name] | X Prefix | ik_x_field1 = somedata; ik_x_baggage1 = code123; | Префикс дополнительных полей. Позволяет передавать дополнительные поля на SCI, после чего эти параметры включаются в данные уведомления о совершенном платеже на страницу взаимодействия. |
    | ***Дополнительные** |  |  |  |
    | ik_inv_id | Invoice Id | 12345; 5632156 | Идентификатор платежа. |
    | ik_co_prs_id | Checkout Purse Id | 307447812424 | Идентификатор кошелька кассы. |
    | ik_trn_id | Transaction Id | 14533; ID_4233 | Идентификатор транзакции. |
    | ik_inv_crt | Invoice Created | 2013-03-17 17:35:33 | Время создания платежа. |
    | ik_inv_prc | Invoice Processed | 2013-03-17 17:36:13 | Время проведения. |
    | ik_inv_st | Invoice State | success; fail | Состояние платежа. |
    | ik_ps_price | Paysystem Price | 25.00 | Сумма платежа в платежной системе. |
    | ik_co_rfn | Checkout Refund | 24.94 | Сумма зачисления на счет кассы. |
    | ik_sign | Signature | oVAOevI3mWrcvrjB4j/ySg== | Цифровая подпись. См. формирования цифровой подписи. |
    | ik_cli | Payer contact | example@example.com | Контакт плательщика. Может быть телефон или e-mail, например. |
    | ***Специальные** |  |  |  |
    | ik_p_card_mask | Маска карты | 414141******4141 | Маска карты в случае ее введения на стороне процессинга |
    | ik_p_card_token | Токенезированная карта | 12345; 5632156 | Токенизированные данные плательщика, включается опционально, позволяет проводить - recurrent payment. Для активации просьба написать на почту merchant@interkassa.com. |

    **Внимание!** Данные об успешном платеже отправляются на указанный в настройках кассы URL взаимодействия (Interaction URL). Уведомление о платеже будет доставляться на клиентский сервер до получения корректного HTTP-код состояния, который указан в настройках кассы (по умолчанию - "200"). В случае неуспеха - сервис сделает до 13-ти повторных попыток на протяжении 3-х дней.
    Структура уведомления спроектирована с учетом возможного, дальнейшего расширения. Это означает, что в последующем мы будем добавлять новые поля, но при этом будет сохранена обратная совместимость. Исключением являются случаи когда наш сервер передает данные непосредственно от платежной системы - в таком случае передаваемые данные могут отличаться или же вовсе отсутствовать в зависимости от типа платежной системы.

    ## 3.4.1. Проверка информации о платеже
    Для исключения возможности компрометации оповещения о платеже на странице взаимодействия, вам необходимо реализовать его проверку, которая приведена ниже. Кроме того, рекомендуется проводить дополнительную сверку данных оповещения о платеже по API. Проверка источника данных в данной проверке, Вам необходимо удостовериться, что оповещение о платеже отправлено непосредственно Интеркассой и не скомпрометировано. Для этого, необходимо проверять IP адрес сервера отправителя (SCI). IP адреса с которых происходит доставка уведомлений: 35.233.69.55, 34.77.232.58, 35.240.117.224. Для аутентификации источника отправителя и целостности данных используется цифровая подпись (см. Формирование цифровой подписи).
    
    **Проверка данных**  
    Несмотря на то, что уведомление формируется на стороне SCI, **ВСЕГДА** проверяйте такую информацию в уведомлении о платеже, как:  
    - Идентификатор кассы (параметр "ik_co_id"). Должен соответствовать Вашему идентификатору кассы.  
    - Сумма платежа (параметр "ik_am"). Должна соответствовать сумме Вашего заказа для которого был выставлен счет.  
    - Состояние платежа (параметр "ik_inv_st"). Должно соответствовать значению "success" (проведен).  
    - Цифровая подпись (параметр "ik_sign").  

    ## 3.5. Формирование цифровой подписи
    Цифровая подпись формируется путем объединения значений всех параметров формы с префиксом "ik_" в алфавитном порядке их имен (без учета регистра), с добавлением в конец «секретного ключа» кассы. Конкатенация идет через символ ":". Если форма содержит несколько полей с одинаковыми именами, такие поля сортируются в алфавитном порядке их значений. Полученное после объединения параметров и «секретного ключа» значение хешируется выбранным методом формирования ЭЦП, и его байтовое представление кодируется в Base64. ik_sign = Base64(MD5(Implode(Sort(Params) + SecretKey, ':'))));  

    **Внимание!** Убедитесь, что ваша хэш-функция возвращает массив байт, а не их представление в HEX. Если все сделано верно, длина параметра ik_sign составляет ровно 24 символа, при хэш-функции MD5.  

    **Внимание!** При создании подписи на Интеркассу, вы должны подписывать данные только секретным ключом.  

    **Внимание!** При получении данных на урл взаимодействия, вы должны удалять из данных поле ik_sign, и только после этого формировать подпись для сверки.  

    Пример алгоритма формирования ЭЦП на языке PHP: https://github.com/CMSInterkassa

    ```
    unset($dataSet['ik_sign']); Delete string with signature from dataset
    ksort($dataSet, SORT_STRING); // Sort elements in array by var names in alphabet queue
    array_push($dataSet, $key); // Adding secret key at the end of the string
    $signString = implode(':', $dataSet); // Concatenation calues using symbol ":"
    $sign = base64_encode(md5($signString, true)); // Get MD5 hash as binare view using generate string and code it in BASE64
    return $sign; // Return the result
    ```

    # 4. Расширенные возможности
    ## 4.1. Скрытый режим SCI

    ## 4.1.1. Описание
    Данный режим предназначен для приема платежей через Интеркассу с перенаправлением клиента при оплате непосредственно на шлюз платежной системы. Это позволит Вашему серверу, в фоновом для клиента виде, получать данные HTML-формы предназначенной для оплаты через указанный платежный шлюз. Все что необходимо для этого — использовать JSON интерфейс SCI, который можно указать через параметр формы запроса платежа —"ik_int" со значением "json".  

    ## 4.1.2. Получение доступного для кассы списка платежных направлений
    Для получения платежной формы для оплаты через шлюз платежной системы, необходимо указать такие значения параметров как: тип действия "ik_act" — "payways. И произвести HTTP-запрос с данными формы запроса платежа на SCI методом POST или GET, а в ответ получить JSON-пакет с данными по доступным для оплаты данного платежа платежными направлениями. Пример запроса:  
    
    ```
    <form name="payment" method="post" action="https://sci.interkassa.com/" accept-charset="UTF-8">
      <input type="hidden" name="ik_co_id" value="51237daa8f2a2d8413000000"/>
      <input type="hidden" name="ik_pm_no" value="ID_4233"/>
      <input type="hidden" name="ik_am" value="1.44"/>
      <input type="hidden" name="ik_desc" value="Payment Description"/>
      <input type="hidden" name="ik_act" value="payways"/>
      <input type="hidden" name="ik_int" value="json"/>
      <input type="submit" value="Pay">
    </form>
    ```
    **Пример ответа:**

    ```
        {
            "resultCode": 0,
            "resultMsg": "Success",
            "resultData": {
                "paywaySet": [
                {
                    "_id": "4f217ec98f2a2d4c0c0002d4",
                     "als": "privatterm_liqpay_merchant_uah",
                     "cur": "4e4147718f2a2d7014000467",
                     "curAls": "uah",
                     "in": "4e4147718f2a2d701400046e",
                     "inAls": "merchant",
                     "insInId": "4f674bd0e313d0f810000154",
                     "ps": "liqpay",
                     "ser": "privatterm",
                     "srt": "25"
                },
                {
                     "_id": "4f217ec98f2a2d4c0c0002d6",
                     "als": "anelik_w1_merchant_rub",
                     "cur": "4e4147718f2a2d701400047c",
                     "curAls": "rub",
                     "in": "4e4147718f2a2d7014000484",
                     "inAls": "merchant",
                     "insInId": "4f674bd0e313d0f81000014c",
                     "ps": "w1",
                     "ser": "anelik",
                     "srt": "36"
                },
                ...
                ]
            }
        }
    ```

    ## 4.1.3. Получение данных о стоимости платежа на платежном шлюзе
    Для получения платежной формы для оплаты через шлюз платежной системы, необходимо указать такие значения параметров как: тип действия "ik_act" — "payway", способ оплаты "ik_pw_via" — < payway alias> (любой доступный для кассы способ оплаты, см. Коды платежных направлений). И произвести HTTP-запрос с данными формы запроса платежа на SCI методом POST или GET, а в ответ получить JSON-пакет с данными по платежу. 

    **Пример запроса:** 

    ```
    <form name="payment" method="post" action="https://sci.interkassa.com/" accept-charset="UTF-8">
      <input type="hidden" name="ik_co_id" value="51237daa8f2a2d8413000000"/>
      <input type="hidden" name="ik_pm_no" value="ID_4233"/>
      <input type="hidden" name="ik_am" value="1.44"/>
      <input type="hidden" name="ik_desc" value="Payment Description"/>
      <input type="hidden" name="ik_int" value="json"/>
      <input type="hidden" name="ik_act" value="payway"/>
      <input type="hidden" name="ik_pw_via" value="webmoney_webmoney_merchant_wmz"/>
      <input type="submit" value="Pay">
    </form>
    ```

    **Пример ответа:**

    ```
    {
    "resultCode":0,
    "resultMsg":"Success",
    "resultData": {
        "invoice": {
            "checkoutId":"51237daa8f2a2d8413000000",
            "checkoutPurseId":"307447812424",
            "paymentNo":"218",
            "paywayId":"4f217ec98f2a2d4c0c000318",
            "paywayPurseId":"50d828d159d93cfb72000001",
            "expired":1385305065,
            "coAmount":5,
            "coRefund":4.925,
            "ikFee":0.15,
            "ikFeeIn":0.075,
            "ikFeeOut":0.075,
            "ikPrice":5.075,
            "psAmount":0.4323,
            "psFeeIn":0,
            "psFeeOut":3,
            "psPrice":0.44,
            "psExchRate":0.085166
            }
        }
    }
    ```

    ## 4.1.4. Получение формы платежа платежного шлюза
    Для получения платежной формы для оплаты через шлюз платежной системы, необходимо указать такие значения параметров как: тип действия "ik_act" — "process", способ оплаты "ik_pw_via" — < payway alias> (любой доступный для кассы способ оплаты, см. Коды платежных направлений). И произвести HTTP-запрос с данными формы запроса платежа на SCI методом POST или GET, а в ответ получить JSON-пакет с данными для формы платежа.  
    
    **Пример запроса:**  

    ```
    <form name="payment" method="post" action="https://sci.interkassa.com/" accept-charset="UTF-8">
      <input type="hidden" name="ik_co_id" value="51237daa8f2a2d8413000000"/v>
      <input type="hidden" name="ik_pm_no" value="ID_4233"/>
      <input type="hidden" name="ik_am" value="1.44"/>
      <input type="hidden" name="ik_desc" value="Payment Description"/>
      <input type="hidden" name="ik_int" value="json"/>
      <input type="hidden" name="ik_act" value="process"/>
      <input type="hidden" name="ik_pw_via" value="webmoney_webmoney_merchant_wmz"/>
      <input type="submit" value="Pay">
    </form>
    ```

    **Пример ответа:**

    ```
    {
    "resultCode": 0,
    "resultMsg": "Success",
    "resultData": {
        "paymentForm": {
            "action": "https://merchant.webmoney.ru/lmi/payment.asp",
            "method": "post",
            "parameters": {
                "LMI_PAYEE_PURSE": "Z922208109129",
                "LMI_PAYMENT_AMOUNT": "103.10",
                "LMI_PAYMENT_DESC": "Payment No. IK15002746; Ноутбук Asus Z99LSeries",
                "LMI_PAYMENT_NO": "15002746"
            }
        }
    }
    ```

    # 5. Тестирование
    ## 5.1. Создание формы запроса платежа
    Для упрощенного создания платежной формы, мы предлагаем Вам воспользоваться нашим генератором платежной HTML-формы **Рисунок 2**. С помощью него, Вы сможете быстро создать и настроить форму запроса платежа, указать все необходимые параметры и настройки, а так же, протестировать ее для перенаправления клиента на оплату через SCI.  

    ## 5.2. Процесс оплаты и проведения платежа
    Для тестирования процесса оплаты и проведения платежа существует "Тестовая платежная система". В новой кассе она отключена по умолчанию, как возможный способ оплаты в Вашей кассе. Для включения данной платежной системы перейдите в Настройки кассы -> Платежные системы и включите «Тестовая платежная система».  
    
    | **Alias** | **Сервис** | **Шлюз** | **Способ** | **Валюта** |
    | --------- | ----------- | ----------- | ---------- | ------------ |
    | test_interkassa_test_xts | Тестовая платежная | Интеркасса | Тест | XTS |

    **Внимание!** Если Ваша касса настроена и работает в публичном открытом режиме, Вам необходимо отключить в настройках кассы "Тестовую платежную систему".  
    Для совершения тестовой оплаты, Вам, достаточно только, выбрать ее в качестве системы для оплаты, и нажать кнопку "Оплатить" или выбрать другое действие с платежом. После чего, SCI перенаправит Вас на соответствующую страницу возврата на Вашем сайте.  
    **Внимание!** При проведении платежа через "Тестовую платежную систему", транзакция не совершается! Меняется только состояние выставленного Вами счета, без зачисления суммы платежа на Ваш баланс.  
    Таким образом, Вы сможете протестировать, в полной мере, весь процесс оплаты, а так же, обработку уведомления о платеже (Interaction Form) на Вашей кассе. Для этого, используйте "тестовый секретный ключ", который доступен Вам в настройках кассы. Данный ключ используется для подписи уведомления о платеже только через "тестовую платежную систему".  
    **Внимание!** Данный механизм, с "тестовым секретным ключом", предотвращает ситуацию, когда Ваше веб-приложение может зачислить платеж, проведенный через "тестовую платежную систему", по данным, переданным на страницу взаимодействия (Interaction URL). Для этого, ВСЕГДА проверяйте цифровую подпись от SCI.  

    # 6. Справочник
    ## 6.1. Коды валют

    Актуальная информация по кодам валют всегда доступна на сайте Interkassa.

    | **ID** | **Имя** | **Код символьный** | **Код цифирный** |
    | ------ | -------- | ------------------ | ---------------- |
    | 10 | Евро | EUR | 978 |
    | 20 | Доллар | USD | 840 |
    | 30 | Гривна | UAH | 980 |
    | 40 | Российский рубль | RUB | 643 |
    | 50 | Беларусский рубль | BYR | 974 |
    | 60 | Золото (одна тройская унция) | XAU | 959 |
    | 99 | Тестовая валюта | XTS | 963 |


    ## 6.2. Коды ошибок

    | **Код** | **Alias** | **Сообщение** |
    | -------- | --------- | ----------- |
    | 100 | E_IS_NOT_WORKING | SCI is not working. Try later... |
    | 101 | E_PROTOCOL_NOT_EXIST | Protocol not exist |
    | 103 | E_REQUEST_IS_EMPTY | Request is empty |
    | 102 | E_INVALID_REQUEST_METHOD | Invalid request method |
    | 104 | E_REQUEST_IS_NOT_SECURE | Request is not secure |
    | 106 | E_PARAM_IS_NOT_SET | Parameter "%s" is not set |
    | 107 | E_PARAM_IS_EMPTY | Parameter "%s" is empty |
    | 108 | E_PARAM_INCORRECT_FORMAT | Parameter "%s" has incorrect format |
    | 109 | E_PARAM_SET_FORBIDDEN | Parameter set "%s" forbidden |
    | 120 | E_CHECKOUT_NOT_FOUND | Checkout is not found |
    | 121 | E_CHECKOUT_UNAVAILABLE |  Checkout is unavailable |
    | 122 | E_CHECKOUT_CURRENCY_INVALID | Checkout has no purses with requested currency |
    | 115 | E_REQUEST_SIGN_INVALID | Request sign "%s" is invalid |
    | 110 | E_PAYMENT_NO_NOT_UNIQUE | Payment no "%s" must be unique |
    | 123 | E_CHECKOUT_PURSE_UNAVAILABLE | Checkout purse is unavailable |
    | 124 | E_CHECKOUT_PAYWAY_UNAVAILABLE | Payway is is unavailable for current checkout |
    | 125 | E_CHECKOUT_PAYWAYS_UNAVAILABLE | Checkout has not any available payway |

    ## 6.3. Коды платежных направлений
    Актуальную информация по кодам платежных направлений всегда можно получить через API по адресу - https://api.interkassa.com/v1/paysystem-input-payway  
     
    # 7. Примечания

    * [Электронная цифровая подпись](https://en.wikipedia.org/wiki/Digital_signature)  
    * [Биллинг](https://en.wikipedia.org/wiki/Electronic_billing)  
    * Процессинг  
    * [Кодировки](https://en.wikipedia.org/wiki/Coding)  
    * [Список кодов состояния HTTP](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)  

    # Interkassa
    ### Основные принципы взаимодействия с REST API
    Интеркасса предоставляет возможность внешним разработчикам программными средствами взаимодействовать с сервисом.  
    Одним из способов такого взаимодействия является использование REST API.  
    REST API определяет набор функций для осуществления взаимодействия по протоколу HTTP. С помощью данных функций можно получить доступ к различным ресурсам системы, например, информацию о платежных направлениях в системе Интеркасса, курсах валют, информацию по конкретному аккаунту в системе Интеркасса (ИК), а также создать вывод средств. Следовательно, функции API разделяются на открытые и приватные. Для вызова приватных функций необходим аккаунт в системе ИК, в котором включена работа с API.  

    Взаимодействие осуществляется с помощью GET или POST запросов в кодировке UTF-8 к URL **`https://api.interkassa.com/v1/[resource]`**  
    Параметры GET запроса должны быть закодированы с помощью URL Encoding.  
    Согласно REST подходу GET запрос на URL вида **`https://api.interkassa.com/v1/[resource]`** вернет список запрашиваемых ресурсов, а **`https://api.interkassa.com/v1/[resource]/[id]`** ресурс с указанным идентификатором.  

    **Каждый ответ от сервера ИК обязательно содержит поля status и code, где status – статус ответа, code – числовой код статуса ответа.**    

    Получение в ответе status = "ok" и code = 0 говорит о том, что запрос выполнен успешно, в поле data передаются данные ответа. Получение в ответе status = "error" свидетельствует об ошибке выполнения запроса, в поле code передается код ошибки, а в дополнительном поле message – вербальное описание ошибки.  

    **Примечание:** при создании вывода может вернуться code = 43101 при status = "ok", данный код говорит о том, что вывод создан в Интеркассе, но еще не проведен на платежной системе.    

    # Открытые ресурсы

    ## 1. Currency
    Назначение: позволяет получить список используемых в системе валют и курсов  

    ```
    URL: https://api.interkassa.com/v1/currency
    Запрос: GET
    ```
    ## 2. Paysystem-input-payway
    Назначение: позволяет получить список платежных направлений на ввод, включенных в системе ИК  

    ```
    URL: https://api.interkassa.com/v1/paysystem-input-payway
    Запрос: GET
    ```
    ## 3. Paysystem-output-payway
    Назначение: позволяет получить список платежных направлений на вывод, включенных в системе ИК. По каждому направлению возвращается его id в ИК, алиас, а также массив обязательных к заполнению реквизитов-ключей в элементе prm. Данные ключи применяются при создании вывода.  

    ```
    URL: https://api.interkassa.com/v1/paysystem-output-payway
    Запрос: GET
    ```
    Примеры ответов в Приложении 1.  

    # Приватные ресурсы
    Для доступа к приватным функциям API необходима авторизация пользователя. Для этого аккаунт должен быть заведен в системе ИК, в настройках аккаунта должна быть включена функция API (по умолчанию такая возможность выключена, включает сотрудник ИК после обращения пользователя).  

    Вид личного кабинета пользователя со включенным API приведен на Рисунке 1.  

    ![секретный ключ пользователя](images/API_ru.jpg)
    **Рисунок 1**. Личные данные пользователя со включенным API

    Авторизация происходит с использованием стандартных правил базовой авторизации для HTTP-запросов: к запросу добавляется HTTP заголовок «Authorization». Значение этого параметра состоит из слова «Basic», пустой характер и зашифрованной BASE64 пары login:password, где login - Id пользователя, password – Ключ (см. Рисунок 1).  

    Также, для работы с ресурсами аккаунта, необходимо передавать идентификатор бизнес аккаунта в HTTP заголовке «Ik-Api-Account-Id». Подробнее об этом ниже.  

    ## 1. Account
    Назначение: позволяет получить список аккаунтов, доступных пользователю.  

    ```
    URL: https://api.interkassa.com/v1/account
    Запрос: GET
    Headers: Authorization
    ```
    В ответ возвращается список аккаунтов, в том числе Бизнес аккаунт. Идентификатор бизнес аккаунта необходим для заполнения HTTP заголовка «Ik-Api-Account-Id», нужно сохранить его.  

    ## 2. Checkout
    Назначение: позволяет получить список касс, привязанных к аккаунту. В ответе передается информация по кассам, в том числе доступные платежные направления на ввод. 

    ```
    URL: https://api.interkassa.com/v1/checkout
    Запрос: GET
    Headers: Authorization, Ik-Api-Account-Id
    ```

    ## 3. Purse
    Назначение: позволяет получить список кошельков, привязанных к аккаунту, с их параметрами.  

    ```
    URL: https://api.interkassa.com/v1/purse
    Запрос: GET
    Headers: Authorization, Ik-Api-Account-Id
    ```
    ## 4. Co-invoice
    Назначение: позволяет получить выгрузку платежей. С каждым платежом передается его идентификатор в системе ИК, время создания и ряд других параметров, в том числе статус платежа в поле “state”.  

    Расшифровка статусов приведена в Приложении 3

    ```
    URL: https://api.interkassa.com/v1/co-invoice
    Запрос: GET
    Headers: Authorization, Ik-Api-Account-Id
    ```

    ## 5. Withdraw
    Назначение: позволяет получать список осуществленных выводов (GET), информацию по конкретному выводу (GET), а также создавать новый вывод в системе ИК (POST).  

    ```
    URL: https://api.interkassa.com/v1/withdraw
    Запрос: GET, POST
    Headers: Authorization, Ik-Api-Account-Id
    ```

    **Для создания нового вывода необходимо сформировать POST-запрос.**  

    Пример запроса на создание выплаты.  
    Метод Qiwi, Валюта RUB.    

    ```
    curl -X POST \
    https://api.interkassa.com/v1/withdraw \
    -H 'Authorization: Basic ***********************************************************' \
    -H 'Ik-Api-Account-Id: ************************' \
    -H 'content-type: multipart/form-data \
    -F amount=4 \
    -F 'details[phone]=79*********' \
    -F paymentNo=534645654-gffgh' \
    -F purseId=************* \
    -F action=process \
    -F method=qiwi \
    -F currency=rub \
    -F useShortAlias=true
    ```
    **Параметры запроса:**  

    **amount** – сумма платежа. Пример: 100. 

    **details[]** – массив реквизитов, типа «ключ-значение». Пример: details[card]=4405882300878265. Полный список параметров см. **Таблица параметров выплат**.

    **purseId** – идентификатор кошелька, с которого осуществлять вывод. Пример: 108523186000.  

    **calcKey** – тип расчета суммы платежа. Доступные значения: «ikPayerPrice» – по сумме списания со счета в системе Интеркасса, «psPayeeAmount» – по сумме зачисления на баланс получателя в валюте платежной системы. По умолчанию: «ikPayerPrice». Пример: ikPayerPrice.  

    **action** – тип действия. Доступные значения: «calc» – рассчитать (вывод не создается в ИК), «process» – провести (создание вывода). По умолчанию: «calc». Пример: process.  

    **paymentNo** – номер вывода в системе мерчанта, является уникальным относительно кассы. Пример: 12345

    **method** – метод через который будет произведен вывод. Пример: сard, bitcoin, qiwi.

    **currency** – валюта, в которой будет произведен вывод. Пример: uah, rub, wmu.

    **useShortAlias** –  обязательный системный параметр.

    Если вывод создан успешно, то в ответе ИК в поле data передается информация о выводе, в том числе `id` вывода в системе ИК и его статус `(state)`. После проведение запроса на вывод, необходимо сделать GET-запрос по `id` операции до получения финального статуса. Финальным статусом может быть только `Success`(8) или `Canceled`(9).  
    **В случае, если ответ на запрос создания вывода не был получен в результате таймаута, сетевой ошибки или был получен ответ с кодами 4X 5X - перед повторной попыткой генерации вывода необходимо обязательно произвести запрос статуса вывода ( через указание `paymentNo` ). В случае генерации повторных запросов на вывод без предварительного опроса статуса возможно создание дублирующихся выводов средств.**

    **Полная расшифровка статусов и данных по выводу приведена в Приложении 4**

    **Примеры ответов по приватным функциям приведены в Приложении 2**

    _Таблица параметров выплат_

    | **Метод и валюта** | **Обязательные параметры** | ***Опциональные параметры** |
    | ----------------------- | ----------------------- | ------------------------ |
    | **card, uah** (Visa, MC) | card |  |
    | **сard, rub**  (visa, MC, Mir) | card<br>phone   | last_name<br> first_name<br> middle_name<br> birth_date<br> birth_place<br> passport<br> passport_date<br> passport_issued<br> city<br> address postcode<br> |
    | **card, usd** (visa, MC, CUP) | card<br> card_month<br> card_year<br> last_name<br> first_name<br> card_owner_birth <br> phone<br> city<br> |  |
    | **card, eur** (visa, MC, CUP) | card<br> card_month<br> card_year<br> last_name<br> first_name<br> card_owner_birth <br> phone<br> city<br> |  |
    | **webmoney, wme** | wallet |  |
    | **webmoney, wmz** | wallet |  |
    | **webmoney, wmu** | wallet |  |
    | **webmoney, wmr** | wallet | phone |
    | **w1, gel** | wallet |  |
    | **w1, usd** | wallet |  |
    | **w1, eur** | wallet |  |
    | **w1, uah** | wallet |  |
    | **perfectmoney, usd** | account |  |
    | **perfectmoney, eur** | account |  |
    | **yandexmoney, rub** | account<br> phone |  |
    | **qiwi, rub** | phone | wallet |
    | **qiwi, usd** | phone |  |
    | **qiwi, eur** | phone |  |
    | **beeline, rub** | phone |  |
    | **mts, rub** | phone |  |
    | **megafon, rub** | phone |  |
    | **tele2, rub** | phone |  |
    | **advcash, rub** | wallet |  |
    | **advcash, usd** | wallet |  |
    | **advcash, eur** | wallet |  |
    | **advcash, uah** | wallet |  |
    | **bitcoin, sth** | account |  |
    | **bitcoin, ikx** | account |  |
    | **vk, rub** | account |  |
    | **kyivstar, uah** | phone |  |
    | **vodafone, uah** | phone |  |
    | **lifecell, uah** | phone |  |
    | **facebook, usd** | account |  |
    | **google, usd** | account |  |
    | **united, usd** | phone |  |
    | **steam, usd** | account |  |
    | **xboxCard, usd** | account<br> service |  |
    | **payeer, usd** | account |  |
    | **payeer, eur** | account |  |
    | **nixmoney, usd** | account |  |
    | **nixmoney, eur** | account |  |
    | **emoney, GEL** | account |  |
    | **rbkmoney, rub** | account |  |


    ## Использование REST API для реализации выводов на сайте мерчанта 

    Для реализации выводов на сайте партнера необходимо осуществить ряд действий:

    1. Подключить для аккаунта возможность использовать REST API.  

    2. Настройках аккаунта, раздел API сгенерировать ключ, заполнить настройки IP фильтра (См. Рисунок 1). Сохранить ключ и Id пользователя в своей системе, они будут использоваться для формирования запросов к REST API.  

    3. Получить данные id бизнес аккаунта ИК, отправив запрос приватный на ресурс account, не забыть HTTP заголовок Authorization. Сохранить его в системе, будет использоваться для дальнейших запросов в HTTP заголовке Ik-Api-Account-Id.  

    4. Получить данные по кошелькам, привязанным к аккаунту с помощью ресурса purse, получить номера кошельков, балансы, не забыв заполнить HTTP заголовки Authorization, Ik-Api-Account-Id. С определенной периодичностью запрашивать данные по кошелькам, хранить у себя в системе актуальный баланс.  

    5. \- id направления, элемент id; - список обязательных реквизитов (элемент prm), по каждому реквизиту хранить; - название ключа для передачи в словаре details в запросе на создание вывода, элемент al; - регулярное выражение для проверки вводимого реквизита, элемент re; - min и max сумма вывода, элемент amn, элементы min и max.  

    6. При создании вывода отправлять POST запрос на withdraw ресурс, заполнять HTTP заголовки Authorization, Ik-Api-Account-Id. В теле запроса передавать все обязательные параметры, а также передавать параметр paymentNo – номер вывода в системе партнера.  

    7. Если запрос обработан без ошибки, то вывод создается в ИК, в ответе в поле data передается информация о выводе, в том числе ид вывода в системе ИК (id) и его статус state. При создании вывода статус его нефинальный. Он будет проведен в системе ИК до финального статуса без участия партнера.  

    8. Если партнер хранит у себя в системе выводы и хочет актуализировать их статусы, можно запрашивать статус по конкретному выводу, GET запрос на ресурс withdraw, указав id вывода в системе ИК, таким образом запрашиваемый URL будет иметь вид `https://api.interkassa.com/v1/withdraw/[id]`. Настоятельно рекомендуется хранить у себя в системе соответствие id вывода в системе мерчанта – выводу в системе ИК. Возможные статусы выводов в системе ИК приведены в Приложении 4 .  

    9. Если запрос создания вывода завершился неудачей (сетевая ошибка или ошибка ИК), то можно запрашивать информацию по выводу, указав paymentNo, номер вывода в системе партнера: `https://api.interkassa.com/v1/withdraw?paymentNo=[paymentNo]`. Если вывода с таким paymentNo не найдено, поле data будет отсутствовать.  

    # ПРИЛОЖЕНИЕ

    ## 1. Примеры ответов при обращении к открытым ресурсам

    **Currency**

    ```
    {
    "status": "ok",
    "code": 0,
    "data": {
        "UAH": {
            "RUB": {
                "out": 2.828854,
                "in": 3.387096
            },
            "USD": {
                "out": 0.061061,
                "in": 0.066883
            },
            "EUR": {
                "out": 0.048787,
                "in": 0.053786
            }
        },
        "USD": {
            "RUB": {
                "out": 45.666634,
                "in": 48.890698
            },
            "UAH": {
                "out": 15.247525,
                "in": 17.49
            },
            "EUR": {
                "out": 0.766931,
                "in": 0.855127
            }
        }
    }
    ```

    **Paysystem-input-payway**

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "53d8b853bf4efca47ebae044": {
                "ps": "w1",
                "cur": "4e4147718f2a2d701400047c",
                "curAls": "rub",
                "inAls": "merchant2",
                "insInId": "53d8b853bf4efca47ebae046",
                "srt": 170,
                "in": "53d10bfbbf4efc7338e22c42",
                "_id": "53d8b853bf4efca47ebae044",
                "als": "dixis_w1_merchant2_rub",
                "ser": "dixis"
            },
            "53d8b879bf4efc8b7fc60e7a": {
                "ps": "w1",
                "cur": "4e4147718f2a2d701400047c",
                "curAls": "rub",
                "inAls": "merchant2",
                "insInId": "53d8b879bf4efc8b7fc60e7c",
                "srt": 170,
                "in": "53d10bfbbf4efc7338e22c42",
                "_id": "53d8b879bf4efc8b7fc60e7a",
                "als": "euroset_w1_merchant2_rub",
                "ser": "euroset"
            }
        }
    }
    ```

    **Paysystem-output-payway**

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "54524f28bf4efcf9296fbb6d": {
                "ser": "egopay",
                "ps": "payeer",
                "fee": {
                    "out": {
                        "rt": 2
                    }
                },
                "cur": "5405c3d8bf4efc516397e2ea",
                "amn": {
                    "max": 2000,
                    "min": 0.1
                },
                "prm": [
                    {
                        "re": "/^.*@.*.[a-z]+$/",
                        "tt": "Account",
                        "al": "account",
                        "tp": "txt",
                        "ex": "egopay@account.com"
                    }
                ],
                "curAls": "usd",
                "outAls": "transfer",
                "srt": 170,
                "_id": "54524f28bf4efcf9296fbb6d",
                "als": "egopay_payeer_transfer_usd",
                "out": "5405c3d8bf4efc516397e2eb"
            },
            "4f229eed8f2a2da80a00037e": {
                "ser": "w1",
                "ps": "w1",
                "cur": "4e4147718f2a2d701400047e",
                "prm": [
                    {
                        "re": "/^\\d{12}$/",
                        "tt": "Purse number",
                        "al": "purse",
                        "tp": "txt"
                    }
                ],
                "curAls": "eur",
                "outAls": "transfer",
                "srt": 153,
                "_id": "4f229eed8f2a2da80a00037e",
                "als": "w1_w1_transfer_eur",
                "out": "4ec6a4198f2a2d0c0b000007"
            }
        }
    }
    ```

    ## 2. Примеры ответов при обращении к приватным ресурсам

    **Account**

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "53fc71c9bf4efc7e6fea0f53": {
                "_id": "53fc71c9bf4efc7e6fea0f53",
                "nm": "Personal",
                "tp": "c",
                "usr": [
                    {
                        "id": "53fc7175bf4efc8470ea0f38",
                        "rl": "o"
                    }
                ]
            },
            "53fc8db9bf4efc7449ea0f3d": {
                "_id": "53fc8db9bf4efc7449ea0f3d",
                "nm": "Business",
                "tp": "b",
                "usr": [
                    {
                        "id": "53fc7175bf4efc8470ea0f38",
                        "rl": "o"
                    }
                ]
            }
        }
    }
    ```

    **Checkout**

    ```
    {
      "status": "ok",
      "code": 0,
      "data": {
        "53fc8e01bf4efc0e48ea0f4c": {
          "_id": "53fc8e01bf4efc0e48ea0f4c",
          "accId": "53fc8db9bf4efc7449ea0f3d",
          "crt": 1409060353,
          "cur": {
            "30": {
              "p": "306697260330",
              "e": true
            }
          },
          "set": {
            "a": {
              "int": {
                "o": "1"
              }
            },
            "m": {
              "url": "http://site.net",
              "nm": "test",
              "pub": "",
              "fs": 0.83,
              "fin": 0
            }
          },
          "st": 1,
          "upd": 1410856979,
          "paysystemInputPayways": {
            "53c3d6e5bf4efc45677b86b0": "interkassa_interkassa_fund_eur",
            "519c8bdfad54863c0d000003": "paxum_paxum_merchant_usd",
            "53c3d6d9bf4efc1a673774f3": "interkassa_interkassa_fund_uah",
            "53c3d6debf4efc2967cfdbb5": "interkassa_interkassa_fund_usd",
            "53c3d6e8bf4efc5267219389": "interkassa_interkassa_fund_rub",
            "53d8bb31bf4efca809d26655": "megafon_w1_merchant2_rub",
            "53d8b979bf4efc09058dfd0b": "w1_w1_merchant2_eur",
            "53d8b95ebf4efcc704276d81": "w1_w1_merchant2_usd",
            "53d8bbd9bf4efc680c633130": "mts_w1_merchant2_rub",
            "4f217ec98f2a2d4c0c0002f6": "w1_w1_merchant_uah",
            "4f217ec98f2a2d4c0c0002e7": "nsmep_smartpay_invoice_uah",
            "5347eda9bec7248524d63af1": "mastercard_liqpay_merchant2_uah",
            "5384951fbec72491f9d63af1": "visa_liqpay_merchantUa_rub",
            "5388a9d4bf4efc8f34e528e9": "mastercard_liqpay_merchantUa_eur",
            "5388a9d3bf4efc8f34e528e6": "visa_liqpay_merchantUa_usd",
            "5388a9d3bf4efc8f34e528e7": "visa_liqpay_merchantUa_eur",
            "5347ed8cbec724ca21d63af1": "visa_liqpay_merchant2_uah",
            "538494e9bec724bbbfd63af1": "mastercard_liqpay_merchantUa_rub",
            "5388a9d4bf4efc8f34e528e8": "mastercard_liqpay_merchantUa_usd",
            "53d10bfbbf4efc7338e22c45": "w1_w1_merchant2_rub"
          }
        }
      }
    }
    ```

    **Purse**

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "306697260330": {
                "id": "306697260330",
                "accountId": "53fc8db9bf4efc7449ea0f3d",
                "type": "c",
                "name": "krementar test UAH",
                "status": "1",
                "balance": "0.0050",
                "frozen": "0.0000",
                "turnover": "0.9850",
                "settings": "{\"co\":\"53fc8e01bf4efc0e48ea0f4c\"}",
                "created": "2014-08-26 16:39:13"
            }
        }
    }
    ```

    **Co-invoice**

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "29735549": {
                "id": "29735549",
                "coId": "53fc8e01bf4efc0e48ea0f4c",
                "coPurseId": "306697260330",
                "paymentNo": "001",
                "paywayId": "4f217ec98f2a2d4c0c0002f6",
                "chargebacked": null,
                "state": "2",
                "result": "1000",
                "expired": "2014-10-01 14:56:14",
                "processed": null,
                "created": "2014-09-01 14:56:14",
                "coAmount": "1.00",
                "coRefund": "0.9850",
                "ikFee": "0.0300",
                "ikFeeIn": "0.0150",
                "ikFeeOut": "0.0150",
                "ikPsFeeIn": "0.0102",
                "ikPrice": "1.0150",
                "psAmount": "1.0150",
                "psIkFee": "0.0102",
                "psExchFee": "0.0000",
                "psFeeIn": "0.0102",
                "psFeeOut": "0.0000",
                "psPrice": "1.02",
                "psAccepted": null,
                "ikExchRate": "1",
                "psCurRate": "1",
                "stateName": "waitAccept",
                "currencyId": 30,
                "currencyCodeChar": "UAH",
                "currencyCodeNum": 980
            },
            "29735697": {
                "id": "29735697",
                "coId": "53fc8e01bf4efc0e48ea0f4c",
                "coPurseId": "306697260330",
                "paymentNo": "ID_4233",
                "paywayId": "4f217ec98f2a2d4c0c0002dc",
                "chargebacked": null,
                "state": "2",
                "result": "1000",
                "expired": "2014-10-01 15:03:21",
                "processed": null,
                "created": "2014-09-01 15:03:21",
                "coAmount": "100.00",
                "coRefund": "98.5000",
                "ikFee": "3.0000",
                "ikFeeIn": "1.5000",
                "ikFeeOut": "1.5000",
                "ikPsFeeIn": "1.0557",
                "ikPrice": "101.5000",
                "psAmount": "307.5758",
                "psIkFee": "3.1988",
                "psExchFee": "12.3031",
                "psFeeIn": "3.1988",
                "psFeeOut": "0.0000",
                "psPrice": "319.88",
                "psAccepted": null,
                "ikExchRate": "3.0303",
                "psCurRate": "1",
                "stateName": "waitAccept",
                "currencyId": 30,
                "currencyCodeChar": "UAH",
                "currencyCodeNum": 980
            }
        }
    }
    ```

    **Withdraw**
    **GET:** получение списка выводов  

    Ответ:  

    ```
    {
        "status": "ok",
        "code": 0,
        "data": [
            {
                "id": "103618",
                "psTrnId": "638712711856",
                "purseId": "306697260330",
                "accountId": "53fc8db9bf4efc7449ea0f3d",
                "coId": "53fc8e01bf4efc0e48ea0f4c",
                "paymentNo": "",
                "paywayId": "4f229eed8f2a2da80a000380",
                "state": "8",
                "result": "0",
                "created": "2014-09-02 13:42:13",
                "processed": "2014-09-02 14:10:07",
                "chargebacked": null,
                "payerWriteoff": "0.9800",
                "payeeReceive": "0.9800",
                "ikFee": "0.0000",
                "ikPrice": "0.9800",
                "ikPsPrice": "0.9800",
                "psFeeIn": "0.00",
                "psFeeOut": "0.00",
                "psCost": "0.0000", (deprecated)
                "ikIncome": "0.0000", (deprecated)
                "psAmount": "0.98",
                "psValue": "0.98",
                "psPrice": "0.98",
                "psCurRate": "1",
                "details": "{\"purse\":\"155026360150\"}",
                "stateName": "success",
                "currencyId": 30,
                "currencyCodeChar": "UAH",
                "currencyCodeNum": 980
            }
        ]
    }
    ```
    **POST:** создание вывода 

    Запрос:  


    ```
    "data": [
         {
      "amount": 1,
      "details": {
      "card": "4141555555554141",
      "phone": "+38000000000"
         },
      "purseId": "306077243209",
      "calcKey": "psPayeeAmount",
      "action": "process",
      "paymentNo": "123",
      "method": "card",
      "currency": "uah",
      "useShortAlias": true
          }
     ]
    ```
    Ответ:

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "id": 178090,
            "withdraw": {
                "id": "178090",
                "trnId": "3167636",
                "purseId": "306077243209",
                "accountId": "53fc8db9bf4efc7449ea0f3d",
                "coId": "5469f815bf4efc3b768e0802",
                "paymentNo": "123",
                "paywayId": "4f229eed8f2a2da80a000380",
                "paywayPurseId": "53d8b7f1bf4efc5a7c875008",
                "state": "4",
                "result": "0",
                "created": "2014-11-28 08:33:28",
                "payerWriteoff": "1.0000",
                "payeeReceive": "1.0000",
                "ikFee": "0.0000",
                "ikPrice": "1.0000",
                "ikPsPrice": "1.0000",
                "psFeeIn": "0.00",
                "psFeeOut": "0.00",
                "psCost": "0.0000", (deprecated)
                "ikIncome": "0.0000", (deprecated)
                "psAmount": "1.00",
                "psValue": "1.00",
                "psPrice": "1.00",
                "psCurRate": "1",
                "details": "{\"purse\":\"155026360150\"}"
            },
            "transaction": {
                "id": "3167636",
                "payerPurseId": "306077243209",
                "payerBalance": "1.0000",
                "payeePurseId": "304146534002",
                "payeeBalance": "259226.9791",
                "state": "0",
                "created": "2014-11-28 08:33:28",
                "payerAmount": "1.0000",
                "payerPrice": "1.0000",
                "payerFee": "0.0000",
                "payerExchFee": "0.0000",
                "payeeAmount": "1.0000",
                "payeeFee": "0.0000",
                "payeePrice": "1.0000",
                "exchRate": "1.000000"
            }
        },
        "message": "Success"
    }
    ```
    **GET:** получение информации по конкретному выводу (данные вывода по заданному ID) 

    **GET** `https://api.interkassa.com/v1/withdraw/178090`  

    Ответ:

    ```
    {
        "status": "ok",
        "code": 0,
        "data": {
            "id": "178090",
            "psTrnId": null,
            "purseId": "306077243209",
            "accountId": "53fc8db9bf4efc7449ea0f3d",
            "coId": "5469f815bf4efc3b768e0802",
            "paymentNo": "123",
            "paywayId": "4f229eed8f2a2da80a000380",
            "state": "1",
            "result": "0",
            "created": "2014-11-28 08:33:28",
            "processed": null,
            "chargebacked": null,
            "payerWriteoff": "1.0000",
            "payeeReceive": "1.0000",
            "ikFee": "0.0000",
            "ikPrice": "1.0000",
            "ikPsPrice": "1.0000",
            "psFeeIn": "0.00",
            "psFeeOut": "0.00",
            "psCost": "0.0000", (deprecated)
            "ikIncome": "0.0000", (deprecated)
            "psAmount": "1.00",
            "psValue": "1.00",
            "psPrice": "1.00",
            "psCurRate": "1",
            "details": "{\"purse\":\"155026360150\"}",
            "stateName": "waitAccept",
            "currencyId": 30,
            "currencyCodeChar": "UAH",
            "currencyCodeNum": 980
        }
    }
    ```

    **GET:** получение информации по конкретному выводу (данные вывода по заданному paymentNo)  

    **GET** `https://api.interkassa.com/v1/withdraw?paymentNo=123`

    Ответ:

    ```
    {
      "status": "ok",
      "code": 0,
      "data": [
      {
                "id": "178090",
                 "psTrnId": null,
                 "purseId": "306077243209",
                 "accountId": "53fc8db9bf4efc7449ea0f3d",
                 "coId": "5469f815bf4efc3b768e0802",
                 "paymentNo": "123",
                 "paywayId": "4f229eed8f2a2da80a000380",
                 "state": "9",
                 "result": "0",
                 "created": "2014-11-28 08:33:28",
                 "processed": null,
                 "chargebacked": null,
                 "payerWriteoff": "1.0000",
                 "payeeReceive": "1.0000",
                 "ikFee": "0.0000",
                 "ikPrice": "1.0000",
                 "ikPsPrice": "1.0000",
                 "psFeeIn": "0.00",
                 "psFeeOut": "0.00",
                 "psCost": "0.0000", (deprecated)
                 "ikIncome": "0.0000" (deprecated),
                 "psAmount": "1.00",
                 "psValue": "1.00",
                 "psPrice": "1.00",
                 "psCurRate": "1",
                 "details": "{\"purse\":\"155026360150\"}",
                 "calc": "payer",
                 "psResultDesc": "Transaction limit exceeded. Try another card.",
                 "stateName": "canceled",
                 "currencyId": 30,
                 "currencyCodeChar": "UAH",
                 "currencyCodeNum": 980
         }
      ]

    }
    ```

    ## 3. Статусы платежей в системе Интеркасса

    | **State** | **Описание** | **Финальность** |
    | --------- | --------------- | ------------ |
    | 0 | Новый платеж | No |
    | 2 | Ожидает оплаты | No |
    | 3 | Обрабатывается платежной системой | No |
    | 4 | В процессе возврата платежной системой | No |
    | 5 | Просрочен | Yes |
    | 6 | Возвращен | Yes |
    | 7 | Зачислен | Yes |
    | 8 | Отменен | Yes |
    | 9 | Платеж возвращен платежной системой | Yes |

    **Примечание:** При получении каких-либо неописанных статусов необходимо обращаться в службу поддержки ИК.

    ## 4. Статусы выводов в системе Интеркасса

    | **State** | **Описание** | **Финальность** |
    | --------- | --------------- | ------------ |
    | 1 | Ожидает проверки модерацией | No |
    | 2 | Проверен модерацией | No |
    | 3 | Отозван модерацией | Yes |
    | 4 | Заморожен | No |
    | 5 | Разморожен | No |
    | 6 | Обработка платежной системой | No |
    | 7 | Зачисление | No |
    | 8 | Проведен | Yes |
    | 9 | Отменен | Yes |
    | 12 | Вывод создан в платежной системе, но еще не проведен | No |
    | 20 | Превышен лимит вывода | No |

    **Примечание:** При получении каких-либо неописанных статусов необходимо обращаться в службу поддержки ИК.   


    **Описание полученных параметров при создании выводов:**  

    payerWriteoff - сумма списания с отправителя (в валюте кошелька отправителя)  

    payeeReceive - сумма зачисления на кошелек ПС (в валюте кошелька ПС ИК)  

    ikFee - комиссия ик (в валюте кошелька ПС ИК)  

    ikPrice - сумма вывода (в валюте кошелька ПС ИК)  

    ikPsPrice - сумма вывода в ПС (+комиссия) (в валюте кошелька ПС ИК)  

    psAmount - сумма перевода получателю // payerAmount; 100 // ikPrice * ps currency  

    psFeeIn - payerFee; 0.8  

    psFeeOut - payeeFee  

    psCost - себестоимость операции вывода (Deprecated)  

    ikIncome - доходность операции вывода (Deprecated)  

    psValue - сумма к отправлению // $psAmount + $psFeeIn  

    psPrice - сумма списания со счета // $psValue + $psFeeOu  

    psCurRate - коэфициент валюты ПС  

    detail - реквизиты для вывода  

    **Описание полученных параметров при создании платежа:**  

    payerAmount - сумма отправления 

    payerFee - комиссия отправления  

    payerPrice - сумма Списания  

    payerExchFee - конвертационная комиссия  

    payeeAmount - сумма получения  

    payeeFee - комиссия получения  

    payeePrice - сумма Начисления  

    exchRate - курс обмена, без конв. ком.  

    [Подписаться на рассылку](https://eepurl.com/cRy5g1)

  version: 1.0.0
  title: Documentation
  x-logo:
    url: 'images/interkassa-logo.png'
    altText: Интеркасса логотип
    backgroundColor: '#FAFAFA'
tags:
  - name: Currency
    description: Cписок используемых в системе валют и курсов
  - name: Paysystem
    description: Платёжные направления
  - name: Account
    description: Список аккаунтов, доступных пользователю
  - name: Checkout
    description: Список касс, привязанных к аккаунту
  - name: Co-invoice
    description: Позволяет получить выгрузку платежей
  - name: Withdraw
    description: Cписок осуществленных выводов
  - name: Purse
    description: Cписок кошельков
x-tagGroups:
  - name: OpenAPI
    tags:
      - Currency
      - Paysystem
      - Account
      - Checkout
      - Co-invoice
      - Withdraw
      - Purse

paths:
  /account:
    get:
      tags:
      - Account
      summary: Список аккаунтов, доступных пользователю
      description: |
        Позволяет получить список аккаунтов, доступных пользователю.
        * В ответ возвращается список аккаунтов, в том числе Бизнес аккаунт.
        * Идентификатор бизнес аккаунта необходим для заполнения HTTP заголовка «Ik-Api-Account-Id», нужно сохранить его
      operationId: getAccountList
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Cписок аккаунтов, доступных пользователю
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/accountList'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  '/account/{ACCOUNT_ID}':
    get:
      tags:
      - Account
      summary: Данные аккаунта по заданному ID
      description: |
        Позволяет получить данные аккаунта по заданному ID.
        * Идентификатор бизнес аккаунта необходим для заполнения HTTP заголовка «Ik-Api-Account-Id», нужно сохранить его
      operationId: getAccountId
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: ACCOUNT_ID
        in: path
        description: ID аккаунта
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Данные аккаунта по заданному ID
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/accountOne'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  /checkout:
    get:
      tags:
      - Checkout
      summary: Список касс, привязанных к аккаунту
      description: |
        Позволяет получить список касс, привязанных к аккаунту.
        * В ответе передается информация по кассам, в том числе доступные платежные направления на ввод.
      operationId: getсheckoutList
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Список касс, привязанных к аккаунту
          content:
            application/json:
              schema:
                $ref: "/components/schemas/checkout.yaml#/list"
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '/components/schemas/auth.yaml#/forbiddenForIp'
  '/checkout/{CHECKOUT_ID}':
    get:
      tags:
      - Checkout
      summary: Данные кассы по заданному ID
      description: |
        Позволяет получить данные кассы по заданному ID.
        * В ответе передается информация по кассе, в том числе доступные платежные направления на ввод.
      operationId: getсheckoutId
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: CHECKOUT_ID
        in: path
        description: ID кассы
        required: true
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Данные кассы по заданному ID
          content:
            application/json:
              schema:
                $ref: "/components/schemas/checkout.yaml#/show"
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '/components/schemas/auth.yaml#/forbiddenForIp'
  /co-invoice:
    get:
      tags:
      - Co-invoice
      summary: Выгрузка платежей
      description: |
        Позволяет получить выгрузку платежей. <br> С каждым платежом передается его идентификатор в
        системе ИК, время создания и ряд других параметров, в том числе статус платежа в поле “state”  

        | **State** | **Описание** | **Финальность** |
        | --------- | --------------- | ------------ |
        | 0 | Новый платеж | No |
        | 2 | Ожидает оплаты | No |
        | 3 | Обрабатывается платежной системой | No |
        | 4 | В процессе возврата платежной системой | No |
        | 5 | Просрочен | Yes |
        | 6 | Возвращен | Yes |
        | 7 | Зачислен | Yes |
        | 8 | Отменен | Yes |
        | 9 | Платеж возвращен платежной системой | Yes | 
      operationId: getCoInvoice
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
         type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      - name: checkoutId
        in: query
        description: Id кассы
        required: false
        schema:
          type: string
      - name: purseId
        in: query
        description: Id кошелька
        required: false
        schema:
          type: string
      - name: paywayId
        in: query
        description: Id платежного направления
        required: false
        schema:
          type: string
      - name: fromDate
        in: query
        description: |
            Список операций которые были созданы с указанной даты (Пример: “2016-04-01“  <br> или “2016-04-01 15:42:42“) <br> (включительно)
        required: false
        schema:
          type: string
      - name: toDate
        in: query
        description: |
            Список операций которые были созданы по указанную дату (Пример: “2016-04-01“ <br> или “2016-04-01 15:42:42“) <br> (включительно)
        required: false
        schema:
          type: string
      - name: fromId
        in: query
        description: Список операций с указанного ID (включительно)
        required: false
        schema:
          type: string
      - name: toId
        in: query
        description: Список операций по указанный ID (включительно)
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: Статус операции 
        required: false
        schema:
          type: string
          enum:
            - '0'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
      responses:
        '200':
          description: Список платежей
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/co-invoiceList'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  '/co-invoice/{CO_INVOICE_ID}':
    get:
      tags:
      - Co-invoice
      summary: Данные платежа по заданному ID
      description: |
        Позволяет получить выгрузку платежа по ID. <br>С каждым платежом передается его идентификатор в
        системе ИК, время создания и ряд других параметров, в том числе статус платежа в поле “state”  
      operationId: getCoInvoiceId
      parameters:
      - name: CO_INVOICE_ID
        in: path
        description: ID платежа
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Данные платежа
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/co-invoiceCurrentId'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  /currency:
    get:
      tags:
      - Currency
      summary: Список используемых валют и курсов в системе
      description: Позволяет получить список используемых валют и курсов в системе
      operationId: getCurrencyList
      responses:
        '200':
          description: Cписок валют используемых в системе
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/currency'
  '/currency/{CURRENCY_ID}':
    get:
      tags:
      - Currency
      summary: Данные по заданой валюте
      description: Позволяет получить заданую валюту и список курсов
      operationId: getCurrencyId
      parameters:
      - name: CURRENCY_ID
        in: path
        description: ID валюты
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Данные по заданой валюте
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/currentCurrencyId'
  /paysystem-input-payway:
    get:
      tags:
      - Paysystem
      summary: Список платежных направление на ввод
      description: Позволяет получить список платежных направлений на ввод, включенных в системе ИК <br><br>
       Для получение списка направлений которые включены для определённой кассы,
       необходимо пройти авторизацию и передать id кассы в параметре <b>“checkoutId“</b> 
      operationId: getPaysystemInputPaywayList
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: false
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор аккаунта
        required: false
        schema:
          type: string
      - name: checkoutId
        in: query
        description: Id кассы
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Список платежных направлений на ввод
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/paysystem-input-payway'
  '/paysystem-input-payway/{PAYWAY_ID}':
    get:
      tags:
      - Paysystem
      summary: Данные платежного направление на ввод по заданному ID
      description: |
        Позволяет получить платежное направление на ввод по заданному ID, включенное в системе ИК
      operationId: getPaysystemInputPaywayId
      parameters:
      - name: PAYWAY_ID
        in: path
        description: ID направления на ввод
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Данные платежного направление на ввод по заданному ID
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/currentPaywayId'
  /paysystem-output-payway:
    get:
      tags:
      - Paysystem
      summary: Список платежных направлений на вывод
      description: |
        Позволяет получить список платежных направлений на вывод, включенных в системе ИК.
        * По каждому направлению возвращается его id в ИК, алиас, а также массив обязательных к заполнению реквизитов-
        ключей в элементе prm.
        * Данные ключи применяются при создании вывода.<br><br>
        Для получение списка направлений которые включены для определённого кошелька,
        необходимо пройти авторизацию и передать id кошелька в параметре <b>“purseId“</b>
      operationId: getOutputPaywayList
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: false
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      - name: purseId
        in: query
        description: Id кошелька
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Список платежных направлений на вывод
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/paysystemOutputPayway'
  '/paysystem-output-payway/{PAYWAY_ID}':
    get:
      tags:
      - Paysystem
      summary: Данные платежного направление на вывод по заданному ID
      description: |
        Позволяет получить платежное направление на вывод, включенное в системе ИК.
        * По каждому направлению возвращается его id в ИК, алиас, а также массив обязательных к заполнению реквизитов-
        ключей в элементе prm.
        * Данные ключи применяются при создании вывода.
      operationId: getOutputPaywayId
      parameters:
      - name: PAYWAY_ID
        in: path
        description: ID направления на вывод
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Данные платежного направление на вывод по заданному ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paysystemOutputPaywayId'
  '/purse':
    get:
      tags:
      - Purse
      summary: Список кошельков, привязанных к аккаунту
      description: |
        Позволяет получить список кошельков, привязанных к аккаунту, с их параметрами <br><br>
        Для получение списка кошельков для определённой кассы, необходимо передать id кассы в параметре <b>“checkoutId“</b><br>
        Для получение кошельков определённой валюты необходимо передать ID валюты в параметре <b>“currency“</b>
      operationId: getPurseList
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      - name: checkoutId
        in: query
        description: Id кассы
        required: false
        schema:
          type: string
      - name: currency
        in: query
        description: Id валюты
        required: false
        schema:
          type: string
          enum:
            - '10'
            - '20'
            - '30'
            - '40'       
      responses:
        '200':
          description: Список кошельков, привязанных к аккаунту, с их параметрам
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/purseList'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  '/purse/{PURSE_ID}':
    get:
      tags:
      - Purse
      summary: Данные кошелька по заданному ID
      description: Позволяет получить данные кошелька по заданному ID
      operationId: getPurseId
      parameters:
      - name: PURSE_ID
        in: path
        description: ID кошелька
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
         type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Данные кошелька по заданному ID
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/purseId'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  /withdraw:
    get:
      tags:
      - Withdraw
      summary: Получить список осуществленных выводов
      description: |
        Позволяет получать список осуществленных выводов<br><br>
        Если запрос создания вывода завершился неудачей (сетевая ошибка или ошибка ИК), то рекомендуем запрашивать информацию по выводу, указав <strong>paymentNo</strong>, номер вывода в системе партнера.<br> Информация по <strong>paymentNo</strong> будет доступна за последний месяц, если необходимо получить более раннюю информацию - стоит указать дополнительные параметры <strong>fromDate</strong> и <strong>toDate</strong>.
        Если вывода с таким **paymentNo** не найдено, поле data будет отсутствовать.<br><br>
      operationId: getWithdrawList
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
         type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:  
          type: string
      - name: paymentNo
        in: query
        description: Номер вывода в системе партнера
        required: false
        schema:
          type: string
      - name: checkoutId
        in: query
        description: Id кассы
        required: false
        schema:
          type: string
      - name: purseId
        in: query
        description: Id кошелька
        required: false
        schema:
          type: string
      - name: paywayId
        in: query
        description: Id платежного направления
        required: false
        schema:
          type: string
      - name: fromDate
        in: query
        description: |
         Список операций которые были созданы с указанной даты (Пример: “2016-04-01“ <br> или “2016-04-01 15:42:42“) <br> (включительно)
        required: false
        schema:
          type: string
      - name: toDate
        in: query
        description: |
            Список операций которые были созданы по указанную дату (Пример: “2016-04-01“ <br> или “2016-04-01 15:42:42“) <br> (включительно)
        required: false
        schema:
          type: string
      - name: fromId
        in: query
        description: Список операций с указанного ID (включительно)
        required: false
        schema:
          type: string
      - name: toId
        in: query
        description: Список операций по указанный ID (включительно)
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: Статус операции
        required: false
        schema:
          type: string
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - '9'
            - '12'
            - '20'
      responses:
        '200':
          description: Список осуществленных выводов
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/withdrawList'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
    post:
      tags:
      - Withdraw
      summary: Cоздать новый вывод в системе ИК
      description: Позволяет создать новый вывод в системе ИК
      operationId: getWithdrawPost
      parameters:
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                amount:
                  description: Cумма платежа
                  type: string
                details[card]:
                  description: Массив реквизитов, типа «ключ-значение
                  type: string
                details[phone]:
                  description: Массив реквизитов, типа «ключ-значение
                  type: string
                purseId:
                  description: Идентификатор кошелька, с которого осуществлять вывод
                  type: string
                calcKey:
                  description: Тип расчета суммы платежа
                  type: string
                action:
                  description: Тип действия
                  type: string
                paymentNo:
                  description: Номер выплаты в системе мерчанта, является уникальным относительно кассы
                  type: string
                method:
                  description: Метод
                  type: string
                currency:
                  description: Валюта
                  type: string
                useShortAlias:
                  description: Обязательный системный параметр
                  type: boolean
              required:
                - amount
                - details[card]
                - details[phone]
                - purseId
                - paymentNo
                - method
                - currency
                - useShortAlias
      responses:
        '200':
          description: Данные о выводе
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/withdrawPostResponse'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
  '/withdraw/{WITHDRAW_ID}':
    get:
      tags:
      - Withdraw
      summary: Информацию по конкретному выводу
      description: Позволяет получить информацию по конкретному выводу (данные вывода по заданному ID)
      operationId: getWithdrawId
      parameters:
      - name: WITHDRAW_ID
        in: path
        description: ID вывода
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Авторизация (HTTP)
        required: true
        schema:
          type: string
      - name: Ik-Api-Account-Id
        in: header
        description: Идентификатор бизнес аккаунта
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Информация по конкретному выводу
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/withdrawId'
        '401':
          description: 'Auth: forbidden for current ip'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbiddenForCurrentIpResponse'
components:
  schemas:
    forbiddenForCurrentIpResponse:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/dataForForbiddenIp"
        message:
          type: string
      required:
        - status
        - code
        - data
        - message
    dataForForbiddenIp:
      properties:
        innerCode:
          type: integer
          format: int32
      required:
        - innerCode
    accountList:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/accountDataId"
    accountDataId:
      properties:
        "{ACCOUNT_ID}":
          type: object
          "$ref": "#/components/schemas/accountData"
    accountData:
      properties:
        _id:
          type: string
        nm:
          type: string
        tp:
          type: string
        usr:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/accountUsr"
    accountUsr:
      properties:
        id:
          type: string
        o:
          type: string
        rl:
          type: string
    accountOne:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/accountData"
    co-invoiceList:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/co-invoiceOne"
    co-invoiceOne:
      properties:
        "{CO_INVOICE_ID}":
          type: object
          "$ref": "#/components/schemas/co-invoiceId"
    co-invoiceId:
      properties:
        id:
          type: string
        agTrnId:
          type: string
        coId:
          type: string
        coPurseId:
          type: string
        paymentNo:
          type: string
        paywayId:
          type: string
        chargebacked:
          type: string
        state:
          type: string
        result:
          type: string
        expired:
          type: string
          format: date-time
        processed:
          type: string
        created:
          type: string
          format: date-time
        coAmount:
          type: string
        coRefund:
          type: string
        ikFree:
          type: string
        ikFreeIn:
          type: string
        ikFreeOut:
          type: string
        ikPsFeeIn:
          type: string
        agFeeRate:
          type: string
        agReward:
          type: string
        ikPrice:
          type: string
        psAmount:
          type: string
        psIkFee:
          type: string
        psExchFee:
          type: string
        psFeeIn:
          type: string
        psFeeOut:
          type: string
        psPrice:
          type: string
        psAccepted:
          type: string
        ikExchRate:
          type: string
        psCurRate:
          type: string
        stateName:
          type: string
        currencyId:
          type: integer
          format: int32
        currencyCodeChar:
          type: string
        currencyCodeNum:
          type: integer
          format: int32
    co-invoiceCurrentId:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/co-invoiceId"
    currency:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/currencyData"
    currencyData:
      properties:
        "{CURRENCY}":
          type: object
          "$ref": "#/components/schemas/currencyId"
    currencyId:
      properties:
        id:
          type: integer
          format: int32
        "{Currency-1}":
          type: object
          "$ref": "#/components/schemas/exchangeRate"
        "{Currency-2}":
          type: object
          "$ref": "#/components/schemas/exchangeRate"
        "{Currency-3}":
          type: object
          "$ref": "#/components/schemas/exchangeRate"
    exchangeRate:
      properties:
        in:
          type: number
          format: float
        out:
          type: number
          format: float
    currentCurrencyId:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/currentCurrencyDataId"
    currentCurrencyDataId:
      properties:
        currentCurrency:
          type: object
          "$ref": "#/components/schemas/currencyId"
    paysystem-input-payway:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/inputPaywayInputList"
    inputPaywayInputList:
      properties:
        "{PAYWAY_ID}":
          type: object
          "$ref": "#/components/schemas/inputPaywayDataId"
    inputPaywayDataId:
      properties:
        _id:
          type: string
        als:
          type: string
        alsOld:
          type: string
        amn:
          type: object
          "$ref": "#/components/schemas/inputPaywayIDdata-amn"
        cur:
          type: string
        curAls:
          type: string
        inAls:
          type: string
        insInId:
          type: string
        ps:
          type: string
        ser:
          type: string
        srt:
          type: integer
          format: int32
        name:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/inputPaywayIDdata-name"
    inputPaywayIDdata-amn:
      properties:
        min:
          type: number
          format: float
        max:
          type: integer
          format: float
    inputPaywayIDdata-name:
      properties:
        l:
          type: string
        v:
          type: string
    currentPaywayId:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/inputPaywayDataId"
    paysystemOutputPayway:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/inputPaywayOutputList"
    inputPaywayOutputList:
      properties:
        "{PAYWAY_ID}":
          type: object
          "$ref": "#/components/schemas/inputPaywayOutputDataId"
    inputPaywayOutputDataId:
      properties:
        _id:
          type: string
        als:
          type: string
        alsOld:
          type: string
        amn:
          type: object
          "$ref": "#/components/schemas/inputPaywayIDdata-amn"
        cur:
          type: string
        curAls:
          type: string
        out:
          type: string
        outAls:
          type: string
        prm:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/inputPaywayIDdata-prm"
        ps:
          type: string
        ser:
          type: string
        srt:
          type: integer
          format: int32
        fee:
          type: object
          "$ref": "#/components/schemas/inputPaywayIDdata-fee"
        name:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/inputPaywayIDdata-name"
    inputPaywayIDdata-prm:
      properties:
        al:
          type: string
        tt:
          type: string
        re:
          type: string
        ex:
          type: string
        tp:
          type: string
    inputPaywayIDdata-fee:
      properties:
        in:
          type: object
          "$ref": "#/components/schemas/inputPaywayIDdata-inOut"
        out:
          type: object
          "$ref": "#/components/schemas/inputPaywayIDdata-inOut"
    inputPaywayIDdata-inOut:
      properties:
        rt:
          type: number
          format: float
        fix:
          type: number
          format: float
    paysystemOutputPaywayId:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/inputPaywayOutputDataId"
    purseList:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/dataPurse"
    dataPurse:
      properties:
        "{purseId}":
          type: object
          "$ref": "#/components/schemas/purseInfo"
    purseInfo:
      properties:
        id:
          type: string
        accountId:
          type: string
        type:
          type: string
        name:
          type: string
        status:
          type: integer
          format: int32
        balance:
          type: number
          format: float
        frozen:
          type: number
          format: float
        turnover:
          type: number
          format: float
        settings:
          properties:
            co:
              type: string
          type: object
        created:
          type: string
          format: date-time
    purseId:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/purseInfo"
    withdrawList:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: array
          items:
            type: object
            "$ref": "#/components/schemas/withdrawIdData"
    withdrawIdData:
      properties:
        id:
          type: string
        psTrnId:
          type: string
        purseId:
          type: string
        accountId:
          type: string
        coid:
          type: string
        paymentNo:
          type: string
        paywayId:
          type: string
        state:
          type: string
        result:
          type: string
        created:
          type: string
          format: date-time
        processed:
          type: string
        chargebacked:
          type: string
        payerWriteoff:
          type: string
        payeeReceive:
          type: string
        ikFee:
          type: string
        ikPrice:
          type: string
        ikPsPrice:
          type: string
        psFeeIn:
          type: string
        psFeeOut:
          type: string
        psCost:
          type: string
        ikIncome:
          type: string
        psAmount:
          type: string
        psValue:
          type: string
        psPrice:
          type: string
        psCurRate:
          type: string
        details:
          properties:
            card:
              type: string
          type: object
        stateName:
          type: string
        currencyId:
          type: integer
          format: int32
        currencyCodeChar:
          type: string
        currencyCodeNum:
          type: integer
          format: int32
    withdrawPostResponse:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          properties:
            id:
              type: integer
              format: int32
            withdraw:
              properties:
                id:
                  type: string
                trnId:
                  type: string
                accountId:
                  type: string
                coId:
                  type: string
                paymentNo:
                  type: string
                paywayId:
                  type: string
                paywayPurseId:
                  type: string
                state:
                  type: string
                result:
                  type: string
                created:
                  type: string
                  format: date-time
                payerWriteoff:
                  type: string
                payeeReceive:
                  type: string
                ikFee:
                  type: string
                ikPrice:
                  type: string
                ikPsPrice:
                  type: string
                psFeeIn:
                  type: string
                psFeeOut:
                  type: string
                psCost:
                  type: string
                ikIncome:
                  type: string
                psAmount:
                  type: string
                psValue:
                  type: string
                psPrice:
                  type: string
                psCurRate:
                  type: string
                details:
                  properties:
                    purse:
                      type: string
                  type: object
              type: object
            transaction:
              properties:
                id:
                  type: string
                payerPurseId:
                  type: string
                payerBalance:
                  type: string
                payeePurseId:
                  type: string
                payeeBalance:
                  type: string
                state:
                  type: string
                created:
                  type: string
                  format: date-time
                payerAmount:
                  type: string
                payerPrice:
                  type: string
                payerFee:
                  type: string
                payerExchFee:
                  type: string
                payeeAmount:
                  type: string
                payeeFee:
                  type: string
                payeePrice:
                  type: string
                exchRate:
                  type: string
              type: object
          type: object
        message:
          type: string
    withdrawId:
      properties:
        status:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
          "$ref": "#/components/schemas/withdrawIdData"
